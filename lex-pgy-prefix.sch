(define accum (make-string 128 #\nul))
(define accum-next 0)
(define (push! c)
  (if (>= accum-next (string-length accum))
      (let ((s accum))
        (set! accum (make-string (* 2 (string-length s)) #\nul))
        (let loop ((i 0))
          (cond ((< i (string-length s))
                 (string-set! accum i (string-ref s i))
                 (loop (+ i 1)))))))
  (string-set! accum accum-next c)
  (set! accum-next (+ 1 accum-next)))
(define (scanChar)    (peek-char (current-input-port)))
(define (consumeChar) (push! (read-char (current-input-port))))
(define (resetAccumulator) (set! accum-next 0))
